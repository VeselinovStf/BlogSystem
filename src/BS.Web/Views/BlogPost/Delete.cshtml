@model BlogPostDeleteViewModel
@await Component.InvokeAsync("PageHeader",
    new
    {
        model = new PageHeaderViewModel()
        {
            BackgroundImage = Model.BackgroundImage,
            HeaderTitle = Model.HeaderTitle,
            PageTitle = Model.PageTitle
        }
    })
@{
    ViewData["Title"] = Model.PageTitle;
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<!-- Main Content -->
    <div class="container">
        <div class="row">
            <div class="col-lg-8 col-md-10 mx-auto">
                <h1>Delete</h1>

                <h3>Are you sure you want to delete this?</h3>
                <div>
                    <h4>BlogPost</h4>
                    <hr />

                    <hr />
                    <dl class="row">
                        <dt class="col-sm-5">
                            @Html.DisplayNameFor(model => model.Title)
                        </dt>
                        <dd class="col-sm-7">
                            @Html.DisplayFor(model => model.Title)
                        </dd>
                        <dt class="col-sm-5">
                            @Html.DisplayNameFor(model => model.CreatedBy)
                        </dt>
                        <dd class="col-sm-7">
                            @Html.DisplayFor(model => model.CreatedBy)
                        </dd>
                        <dt class="col-sm-5">
                            @Html.DisplayNameFor(model => model.LastEditedBy)
                        </dt>
                        <dd class="col-sm-7">
                            @Html.DisplayFor(model => model.LastEditedBy)
                        </dd>
                        <dt class="col-sm-5">
                            @Html.DisplayNameFor(model => model.Content)
                        </dt>
                        <dd class="col-sm-7">
                            @Html.DisplayFor(model => model.Content)
                        </dd>
                        <dt class="col-sm-5">
                            @Html.DisplayNameFor(model => model.CreatedOn)
                        </dt>
                        <dd class="col-sm-7">
                            @Html.DisplayFor(model => model.CreatedOn)
                        </dd>
                        <dt class="col-sm-5">
                            @Html.DisplayNameFor(model => model.ModifiedOn)
                        </dt>
                        <dd class="col-sm-7">
                            @Html.DisplayFor(model => model.ModifiedOn)
                        </dd>
                        <dt class="col-sm-5">
                            @Html.DisplayNameFor(model => model.Author)
                        </dt>
                        <dd class="col-sm-7">
                            @Html.DisplayFor(model => model.Author)
                        </dd>
                        <dt class="col-sm-5">
                            @Html.DisplayNameFor(model => model.BlogPostTags)
                        </dt>
                        <dd class="col-sm-7">
                           
                                @foreach (var item in Model.BlogPostTags)
                                {
                                    <p class="card d-inline-block" >@item.Name</p> 
                                 }
                           
                        </dd>
                    </dl>

                </div>
            </div>
        </div>


        <form asp-action="Delete" asp-controller="BlogPost">
            <input type="hidden" asp-for="Id" />
            <input type="submit" value="Delete" class="btn btn-danger" /> |
            <a class="btn btn-dark" asp-action="Index" asp-controller="Home">Back to List</a>
        </form>
    </div>
